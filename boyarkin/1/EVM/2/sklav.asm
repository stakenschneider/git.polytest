	org 8300h
memklav:
	mov 20h, #0h ; 0 for clear C
	mov R1, #33h 	; Адрес первой ячейки памяти для просмотра
	mov R3, #3h	; счетчик(по строкам и столбцам)
	mov 35h, #0h 	; Счётчик нажатых клавиш
	mov 37h, #0h 	; Код символа
	mov 38h, #0h	; номер строки
	mov 39h, #0h	; номер столбца
	lcall klav
	
	; Сначала - проверка на ноль (ничего не нажато)
zero_chk:
	mov C, 0h		; clear C
	mov A, @R1 	; Читаем данные из памяти
	;mov 56h, R1
	subb A, #f0h	; Отнимаем 0Fh - если будет ноль, то ничего не нажато.
			; Иначе считаем, что было какое-нибудь нажатие.	
	jz skip_cntr	; A==0 - пропускаем счётчик нажатий
	inc 35h		; Не ноль - инкремент счётчика нажатий
	mov A,@R1
	mov 37h,A		; Сохраняем код нажатой клавиши.
	mov 38h,R3	; Сохранили номер строки нажатой клавиши

skip_cntr:	
	dec R1		; Берём следующий элемент из памяти
			; Пока не достигли конца массива для проверки -
	dec R3		; увеличиваем номер строки
	mov C, 0h		; clear C
	cjne R1, #2Fh, zero_chk ; - продолжаем цикл
	; Вышли из цикла проверки отсутствия нажатий
		

	mov A, 35h	; Грузим в А счётчик нажатий
	jz wr_0		; 0 нажатий - пишем ноль
	mov C, 0h		; clear C
	cjne A, #01h, wr_FF 	; больше 1 нажатия - пишем FF
	
	mov dptr, #cdMask 	; начало массива кодов
	mov R3,#0h;	; обнулили счетчик
	
find_column:
	inc R3;		; счетчик номера столбца
	mov 39h,R3	; сохраняем номер столбца
	mov A,R3;
	mov C, 0h		; clear C
	subb A,#5h
	jz wr_FF ; Т.к. клавишу точно нажали(или несколько)
		; ее код обазятельно должен найтись в массиве
		; иначе - было нажато несколько клавиш, и код не совпал
	movx A, @dptr	; записали элемент 
	inc dptr		; сразу inc индекс в массиве
	mov C, 0h		; clear C
	cjne A, 37h, find_column ; если число не равно найденному,
			; продолжим поиск
get_num:
	; номер строки*4+номер столбца
	mov A, 38h
	mov C, 0h		; clear C	
	rl A
	rl A			; два сдвига числа =*4
	;add A, 39h		; получили число
	add A, #5h
	subb A, 39h
	mov 34h, A	; запись числа 
	sjmp ext
wr_0:	mov 34h, #0h
	sjmp ext
wr_FF:	mov 34h, #FFh
	sjmp ext			

	; Существующие коды клавиш - характерны для столбца.
cdMask: db E0h, D0h, B0h, 70h
	
ext:	ret

p5:	equ f8h

klav:	mov r0, #30h	; задаем адрес карты памяти
	orl p5, #f0h	; настраиваем порт на ввод
	mov a, #7fh	; загружаем код бегущего нуля

mb:	mov p1, a		
	mov r2, a		
	mov a, p5	; считываем данные с клавиатуры
	anl a,#f0h
	mov @r0, a	; и запоминаем их
	inc r0		; увеличиваем адрес для записи
	mov a, r2
	rr a		; осуществляем сдвиг
	cjne a, #f7h, mb; выполняем цикл
	ret