
*********************
	Пример 2.
*********************
	
Если в in.txt только одна \n, то в out.txt будет 2 lines. Если в in.txt введена 1 строка без \n, то в out.txt будет 1 lines.Так как в файле есть нулевая строка.

*********************
	Пример 3.
********************* 

Если в in.txt 89-5+9999, то в out.txt:
	1 89
	2 -5
	3 +9999 




*********************
	Пример 6.
*********************

Если в in.txt:

	Andrey
	YABCDEFG
	yo
	abcdefg
	tABCdefgr
	Yo

То в out.txt:

	y	- правильная работа. Последов. задана правильно
		- удалены все символы.
	yo	- правильная работа. Последов. задана правильно
	abcdefg 
	tr	- удаление больших букв. Т.к. после А идет В, то отсчет удаляемых символов начинается занаво. После С идут маленькие буквы, следовательно, удаляется 5 символов (остается r).
		- удаляется все символы, хотя их меньше 5.

*********************
	Пример 7.
*********************

Из кода программы следует правило: 
	Если 16-ричное число начинается с буквы, то для того, чтобы оно не воспринималось как идентификатор необходимо перед ним поставить "0", а в конце "h". 
	Если 16-ричное число начинается с цифры [0-9], то 0 ставить необязательно.
	 
Если в in.txt:

	/*True*/
	id1 7
	id2 3Fh
	8
	3Fh
	0F5h

	/*False*/
	id4Bh
	A4h
	id4 A4h

То в out.txt:
	
	ident: id1
	decimal: 7

	ident: id2
	hex: 3Fh

	decimal: 8

	hex: 03Fh

	hex: 0F5h



	ident: id4Bh

	ident: A4h

	ident: id4
	ident: A4h

*********************
	Пример 8.
*********************

Ключ -l при трансляции, для корректной работы.Макс. совместимость с оригинальным LEX. Без него ячейки памяти используются одни и те же.

	/usr/bin/flex -wl ex8.l 

Если в in.txt:
	
	@Andrey
	@abcdef
	@34df
	abcd

То в out.txt:

	yerdnA
	fedcba
	@34df
	abcd

*********************
	Пример 9.
*********************
Если в in.txt:
	
	ready
	read
	readread

То в out.txt:

	identifier: ready   - Предпочтение отдается соответствию большей длины 
	operation: read     - оба правила распознают одинаковое число литер - 4, но будет выбрано первое правило, т.к. оно задано раньше
	identifier: readread

*********************
	Пример 10.
*********************
Если в in.txt:
	'first' here, 'second' there
То в out.txt:
	 there
читает последнюю '.

*********************
	Пример 11.
*********************

Если в in.txt:
	'first' here, 'second' there
То в out.txt:
	 here,  there

*********************
	Пример 12_1.
*********************

Если в in.txt:
	autor magic
	add maggd
	centr magic
	b is magic
	B magic

То в out.txt:
	autor <first>
	add maggd
	centr <third>
	b is <second>
	B magic

*********************
	Пример 12_2.
*********************

То же что и в примере 12_1, только код сокращен.

*********************
	Пример 13_1.
*********************
То же что и в примере 12_1, только со стартовыми условиями.

*********************
	Пример 13_2.
*********************

Если в in.txt:
	autor magic
	add maggd
	centr magic
	b is magic
	B magic

То в out.txt:
	(0)a(1)u(1)t(1)o(1)r(1) (1)<first>(1)
	(0)a(1)d(1)d(1) (1)m(1)a(1)g(1)g(1)d(1)
	(0)c(3)e(3)n(3)t(3)r(3) (3)<third>(3)
	(0)b(2) (2)i(2)s(2) (2)<second>(2)
	(0)B(0) (0)m(0)a(0)g(0)i(0)c(0)

Исходное условие = 0 (оно устанавливается если был перевод строки "\n"). Если в начале строки определена буква a, b или с, то происходит высчитывание значения стартового условия (если а, то 1, если b, то 2, если с, то 3). Из полученных результатов видно, что значения стартовых условий АА, ВВ и СС следующие: 1, 2 и 3. Таким образом, стартовым условиям присваивается значение начиная с 1 в порядке их следования.

*********************
	Пример 14_1.
*********************

Если в in.txt:
	sheehe
	she
	heshe

То в out.txt:
	e
	she: 3 times, he: 2 times

Здесь запрограммирован подсчет экземпляров последовательностей "she'' и "he''. Анализатор не будет распознавать те экземпляры "he'', которые находятся внутри "she'', т.к. после распознавания "she'' все эти литеры уходят из входной последовательности. 

*********************
	Пример 14_2.
*********************

Для выявления некоторых последовательностей внутри других последовательностей (также представляющих интерес) нужно:

- вернуть принятую последовательность во входной поток;
- исключить правило, которым была распознана эта последовательность;
- возобновить сопоставление. 

Первая фаза этого действия может быть реализована вызовом yyless(0), вторая - при помощи стартовых условий. Вместе с тем, имеется возможность задать это действие одной макрокомандой REJECT.

Если в in.txt:
	sheehe
	she
	heshe

То в out.txt:
	sheehshhesh
	she: 3 times, he: 5 times
