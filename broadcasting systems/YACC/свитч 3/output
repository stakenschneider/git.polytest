	mov ax,1
	push ax
	mov ax,m
	push ax
	pop cx
	pop ax
	add ax,cx
	push ax
	(
	mov ax,4
	push ax
	mov ax,2
	push ax
	pop bx
	pop ax
	div bx
	push bx
	(
	mov ax,p
	push ax
	mov ax,3
	push ax
	mov ax,0
	push ax
	pop bx
	pop ax
	mul ax
	push ax
	pop cx
	pop ax
	add ax,cx
	push ax
	)
	pop cx
	pop ax
	sub ax,cx
	push ax
	)
	pop cx
	pop ax
	sub ax,cx
	push ax
	pop ax
	jmp ax
case_1:
	mov m,k
	mov k,3
	jmp exit
case_2:
	mov p,4
case_3:
case_4:
	jmp exit
def:
	mov m,0
	mov k,m
	mov p,k
	jmp exit
exit: 